[tool.poetry]
name = "genomics_base"
version = "0.1.0"
description = ""
authors = ["AdolfoRoquero"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.0.3"
jupyter = "^1.1.1"
scikit-learn = "^1.3.0"
seaborn = "^0.12.2"
biopython = "^1.81"
pybedtools = "^0.9.1"
attrs = "^23.1.0"
openpyxl = "^3.1.2"
xlrd = "^2.0.1"
tqdm = "^4.66.1"
pybigwig = "^0.3.22"
geofetch = "^0.12.5"
statsmodels = "^0.14.1"
boto3 = "^1.34.40"
typeguard = "^4.1.5"
nf-core = "^2.13.1"
mlxtend = "^0.23.1"
logomaker = "^0.8"
swifter = "^1.4.0"


[tool.poetry.group.dev.dependencies]
flake8 = "^6.0"
coverage = "^5.4"
isort = "^5.12"
black = "^23.7"
pytest = "^7.4"
safety = "^1.10.3"
flake8-pyi = "^23.6"
mypy = "^1.13.0"
pytest-xdist = "^2.4.0"
pyflakes = "^3.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
exclude = '/(\.eggs|\.git|\.hg|\.mypy_cache|\.nox|\.tox|\.venv|antenv|_build|buck-out|build|dist|migrations|stubs|)/'
line-length = 110

[tool.pylint.format]
max-line-length = "110"

[tool.isort]
skip = "stubs,.venv"
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 110

[tool.mypy]
mypy_path = ".venv/bin/mypy"
exclude = ['tests/']
warn_unused_configs = true
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = true


[[tool.mypy.overrides]]
module = ["attrs"]
ignore_missing_imports = false

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib", "--strict-markers"]
filterwarnings = ["ignore::DeprecationWarning"]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]


[tool.pylint.'MESSAGES CONTROL']
disable = [
    "logging-fstring-interpolation",
    # Other warnings or errors to disable can be added here
]
